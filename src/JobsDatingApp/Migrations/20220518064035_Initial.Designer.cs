// <auto-generated />
using System;
using JobsDatingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobsDatingApp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220518064035_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JobsDatingApp.Data.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullDesc = "State company Sber",
                            Name = "Sber",
                            PhotoPath = "/Files/CompanyPhoto/Sber.jpg",
                            ShortDesc = "Sber company"
                        },
                        new
                        {
                            Id = 2,
                            FullDesc = "Private company VTB",
                            Name = "VTB",
                            PhotoPath = "/Files/CompanyPhoto/Vtb.jpg",
                            ShortDesc = "VTB company"
                        });
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.LastViewedVacancy", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "VacancyId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("VacancyId");

                    b.ToTable("LastViewedVacancy");
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4e00079-9248-4785-a40d-67720856e2f0"),
                            Email = "test@mail.com",
                            Login = "Bob123",
                            Name = "Bob",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FullDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("ShortDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Vacancies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            FullDesc = "Junior position in Sber",
                            Name = "Junior",
                            Salary = 50000.0,
                            ShortDesc = "Junior position"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            FullDesc = "Middle position in Sber",
                            Name = "Middle",
                            Salary = 100000.0,
                            ShortDesc = "Middle position"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            FullDesc = "Junior position in Vtb",
                            Name = "Junior",
                            Salary = 45000.0,
                            ShortDesc = "Junior position"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            FullDesc = "Middle position in Vtb",
                            Name = "Middle",
                            Salary = 110000.0,
                            ShortDesc = "Middle position"
                        });
                });

            modelBuilder.Entity("UserVacancy", b =>
                {
                    b.Property<Guid>("LikedUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LikedVacanciesId")
                        .HasColumnType("int");

                    b.HasKey("LikedUsersId", "LikedVacanciesId");

                    b.HasIndex("LikedVacanciesId");

                    b.ToTable("UserVacancy");
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.LastViewedVacancy", b =>
                {
                    b.HasOne("JobsDatingApp.Data.Models.User", "User")
                        .WithOne("LastViewedVacancy")
                        .HasForeignKey("JobsDatingApp.Data.Models.LastViewedVacancy", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobsDatingApp.Data.Models.Vacancy", "Vacancy")
                        .WithMany()
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.Vacancy", b =>
                {
                    b.HasOne("JobsDatingApp.Data.Models.Company", "Company")
                        .WithMany("Vacancies")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("UserVacancy", b =>
                {
                    b.HasOne("JobsDatingApp.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("LikedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobsDatingApp.Data.Models.Vacancy", null)
                        .WithMany()
                        .HasForeignKey("LikedVacanciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.Company", b =>
                {
                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.User", b =>
                {
                    b.Navigation("LastViewedVacancy");
                });
#pragma warning restore 612, 618
        }
    }
}
