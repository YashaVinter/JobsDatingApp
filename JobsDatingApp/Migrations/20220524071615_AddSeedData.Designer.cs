// <auto-generated />
using System;
using JobsDatingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobsDatingApp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220524071615_AddSeedData")]
    partial class AddSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JobsDatingApp.Data.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 5402004,
                            Name = "Lenkep recruitment",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/933153.png"
                        },
                        new
                        {
                            Id = 4759060,
                            Name = "HR Prime",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/792449.jpg"
                        },
                        new
                        {
                            Id = 4400182,
                            Name = "HIVE",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/698667.png"
                        },
                        new
                        {
                            Id = 4712659,
                            Name = "Progressive Mind",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/758968.png"
                        },
                        new
                        {
                            Id = 5076342,
                            Name = "Gara.capital",
                            PhotoPath = ""
                        },
                        new
                        {
                            Id = 578702,
                            Name = "ArtVolkov.ru",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/871828.jpg"
                        },
                        new
                        {
                            Id = 6089401,
                            Name = "RuWork",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/949243.png"
                        },
                        new
                        {
                            Id = 6166013,
                            Name = "Федорова Татьяна",
                            PhotoPath = ""
                        },
                        new
                        {
                            Id = 3836446,
                            Name = "PointPay",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/856418.png"
                        },
                        new
                        {
                            Id = 5122356,
                            Name = "ГравиЛинк",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/835607.png"
                        },
                        new
                        {
                            Id = 723714,
                            Name = "ZennoLab",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/577373.png"
                        },
                        new
                        {
                            Id = 4300631,
                            Name = "Kvando Technologies",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/683838.png"
                        },
                        new
                        {
                            Id = 239811,
                            Name = "Team Force",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/965073.png"
                        },
                        new
                        {
                            Id = 966589,
                            Name = "ТУЛА Консалтинг",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/243680.jpg"
                        },
                        new
                        {
                            Id = 776314,
                            Name = "Парфюмерно-косметический супермаркет Золотое Яблоко",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/894970.jpg"
                        },
                        new
                        {
                            Id = 5451960,
                            Name = "ВФМ Технолоджи",
                            PhotoPath = "https://hhcdn.ru/employer-logo-original/878699.png"
                        });
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.LastViewedVacancy", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "VacancyId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("VacancyId");

                    b.ToTable("LastViewedVacancy");
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78351b29-7db6-4bcd-b785-54c54d1d9b7c"),
                            Email = "test@mail.com",
                            Login = "Bob123",
                            Name = "Bob",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FullDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Vacancies");

                    b.HasData(
                        new
                        {
                            Id = 55162113,
                            Address = "Москва",
                            CompanyId = 5402004,
                            FullDesc = "2 years experience in Solidity. - Availability of embedded smart contracts. - Strong experience in Truffle/ Waffle/ Hardhat/ Brownie. - Brilliant engineering, math...",
                            Name = "Solidity Developer",
                            Salary = 540000.0,
                            ShortDesc = "2 years experience in Solidity. - Availability of embedded smart contracts. - Strong experience in Truffle/ Waffle/ Hardhat/ Brownie. - Brilliant engineering, math..."
                        },
                        new
                        {
                            Id = 55526119,
                            Address = "Москва",
                            CompanyId = 4759060,
                            FullDesc = "Мы принимаем разные профили на должность <highlighttext>разработчика</highlighttext> C, независимо от прежней специализации и многолетнего опыта. Для нас важнее оценить способности...",
                            Name = "С++ Developer",
                            Salary = 650000.0,
                            ShortDesc = "Мы принимаем разные профили на должность <highlighttext>разработчика</highlighttext> C, независимо от прежней специализации и многолетнего опыта. Для нас важнее оценить способности..."
                        },
                        new
                        {
                            Id = 55338997,
                            Address = "Москва",
                            CompanyId = 4400182,
                            FullDesc = "Для успешного прохождения собеседований важно хорошо знать чистый JS, остальному готовы обучать.",
                            Name = "Senior Fullstack Developer",
                            Salary = 345000.0,
                            ShortDesc = "Для успешного прохождения собеседований важно хорошо знать чистый JS, остальному готовы обучать."
                        },
                        new
                        {
                            Id = 55225298,
                            Address = "Москва",
                            CompanyId = 4712659,
                            FullDesc = "Понимание современных технологий и инструментов, применяемых в <highlighttext>разработке</highlighttext>. Опыт инструментирования кода для мониторинга ключевых показателей корректности работы приложения. ",
                            Name = "Python Developer (в ОАЭ)",
                            Salary = 330000.0,
                            ShortDesc = "Понимание современных технологий и инструментов, применяемых в <highlighttext>разработке</highlighttext>. Опыт инструментирования кода для мониторинга ключевых показателей корректности работы приложения. "
                        },
                        new
                        {
                            Id = 55871487,
                            Address = "Москва",
                            CompanyId = 5076342,
                            FullDesc = "Опыт <highlighttext>разработки</highlighttext> С от 4 лет. - Опыт многопоточной/асинхронной <highlighttext>разработки</highlighttext> от 4 лет. - Опыт <highlighttext>разработки</highlighttext> High-Load/Low-Latency сервисов. - ",
                            Name = "Senior Software Engineer",
                            Salary = 650000.0,
                            ShortDesc = "Опыт <highlighttext>разработки</highlighttext> С от 4 лет. - Опыт многопоточной/асинхронной <highlighttext>разработки</highlighttext> от 4 лет. - Опыт <highlighttext>разработки</highlighttext> High-Load/Low-Latency сервисов. - "
                        },
                        new
                        {
                            Id = 48457284,
                            Address = "Москва",
                            CompanyId = 578702,
                            FullDesc = "Опыт <highlighttext>разработки</highlighttext> современных, безопасных, масштабируемых сложных приложений. Практический опыт работы с крипто‐токеномикой, консенсусными протоколами блокчейна, P2P‐сетями...",
                            Name = "Разработчик Solidity/Разработчик Rust/Разработчик Go/Разработчтик python(удаленно)",
                            Salary = 600000.0,
                            ShortDesc = "Опыт <highlighttext>разработки</highlighttext> современных, безопасных, масштабируемых сложных приложений. Практический опыт работы с крипто‐токеномикой, консенсусными протоколами блокчейна, P2P‐сетями..."
                        },
                        new
                        {
                            Id = 55502178,
                            Address = "Санкт-Петербург",
                            CompanyId = 6089401,
                            FullDesc = "...заказчиками от 1 года. Готовность предоставить рекомендацию от зарубежных заказчиков / коллег. Опыт работы в области программной <highlighttext>разработки</highlighttext> от 3 лет.",
                            Name = "Senior Software Developer (upwork / иностранный заказчик)",
                            Salary = 570000.0,
                            ShortDesc = "...заказчиками от 1 года. Готовность предоставить рекомендацию от зарубежных заказчиков / коллег. Опыт работы в области программной <highlighttext>разработки</highlighttext> от 3 лет."
                        },
                        new
                        {
                            Id = 55162514,
                            Address = "Москва",
                            CompanyId = 6166013,
                            FullDesc = "КОММЕРЧЕСКИЙ опыт в геймдеве в качестве Unity от 6-х лет - обязателен! Наличие портфолио с опубликованными играми, среди которых есть...",
                            Name = "Unity Developer (Senior)",
                            Salary = 500000.0,
                            ShortDesc = "КОММЕРЧЕСКИЙ опыт в геймдеве в качестве Unity от 6-х лет - обязателен! Наличие портфолио с опубликованными играми, среди которых есть..."
                        },
                        new
                        {
                            Id = 55871446,
                            Address = "Санкт-Петербург",
                            CompanyId = 5076342,
                            FullDesc = "Знать stl C, устройства работы стандартных контейнеров, времени работы методов. -- Иметь опыт промышленной <highlighttext>разработки</highlighttext> от 1 года. -- Владеть bash, понимать...",
                            Name = "Quantitative Developer",
                            Salary = 400000.0,
                            ShortDesc = "Знать stl C, устройства работы стандартных контейнеров, времени работы методов. -- Иметь опыт промышленной <highlighttext>разработки</highlighttext> от 1 года. -- Владеть bash, понимать..."
                        },
                        new
                        {
                            Id = 55871430,
                            Address = "Москва",
                            CompanyId = 5076342,
                            FullDesc = "Знать stl C, устройства работы стандартных контейнеров, времени работы методов. -- Иметь опыт промышленной <highlighttext>разработки</highlighttext> от 1 года. -- Владеть bash, понимать...",
                            Name = "Quantitative Developer",
                            Salary = 400000.0,
                            ShortDesc = "Знать stl C, устройства работы стандартных контейнеров, времени работы методов. -- Иметь опыт промышленной <highlighttext>разработки</highlighttext> от 1 года. -- Владеть bash, понимать..."
                        },
                        new
                        {
                            Id = 55248083,
                            Address = "Москва",
                            CompanyId = 3836446,
                            FullDesc = "Знакомство с Amazon Web Services. Опыт <highlighttext>разработки</highlighttext> криптовалютных кошельков / криптовалютных бирж / криптовалютных торговых роботов / криптовалютных платежных систем или опыт работы...",
                            Name = "Senior PHP Developer",
                            Salary = 475000.0,
                            ShortDesc = "Знакомство с Amazon Web Services. Опыт <highlighttext>разработки</highlighttext> криптовалютных кошельков / криптовалютных бирж / криптовалютных торговых роботов / криптовалютных платежных систем или опыт работы..."
                        },
                        new
                        {
                            Id = 51540865,
                            Address = "Санкт-Петербург",
                            CompanyId = 5122356,
                            FullDesc = "применять все знания и опыт в сфере IT для <highlighttext>разработки</highlighttext> уникальных продуктов, которыми можно гордиться. - имели твёрдые фундаментальные знания математики...",
                            Name = "Программист-разработчик игр (Senior)",
                            Salary = 360000.0,
                            ShortDesc = "применять все знания и опыт в сфере IT для <highlighttext>разработки</highlighttext> уникальных продуктов, которыми можно гордиться. - имели твёрдые фундаментальные знания математики..."
                        },
                        new
                        {
                            Id = 54397526,
                            Address = "Нижний Новгород",
                            CompanyId = 723714,
                            FullDesc = "Опыт <highlighttext>разработки</highlighttext> на C не менее 3 лет. Способности работы в больших проектах, таких как Chromium. Умение разбираться в чужом...",
                            Name = "Chromium C++ Developer (удаленно)",
                            Salary = 350000.0,
                            ShortDesc = "Опыт <highlighttext>разработки</highlighttext> на C не менее 3 лет. Способности работы в больших проектах, таких как Chromium. Умение разбираться в чужом..."
                        },
                        new
                        {
                            Id = 55341190,
                            Address = "Брянск",
                            CompanyId = 4300631,
                            FullDesc = "Какие знания необходимы: Желание перейти на Golang, имея опыт в backend <highlighttext>разработке</highlighttext>.",
                            Name = "Backend разработчик",
                            Salary = 170000.0,
                            ShortDesc = "Какие знания необходимы: Желание перейти на Golang, имея опыт в backend <highlighttext>разработке</highlighttext>."
                        },
                        new
                        {
                            Id = 49361125,
                            Address = "Москва",
                            CompanyId = 723714,
                            FullDesc = "Опыт <highlighttext>разработки</highlighttext> на C не менее 3 лет. Способности работы в больших проектах, таких как Chromium. Умение разбираться в чужом...",
                            Name = "Chromium C++ Developer (удаленно)",
                            Salary = 350000.0,
                            ShortDesc = "Опыт <highlighttext>разработки</highlighttext> на C не менее 3 лет. Способности работы в больших проектах, таких как Chromium. Умение разбираться в чужом..."
                        },
                        new
                        {
                            Id = 55867445,
                            Address = "Москва",
                            CompanyId = 239811,
                            FullDesc = "Знание C#. Postgresql. Опыт с Camunda (нужно работать с Camunda RestApi и с Camunda External Task). Возможности профессионального развития: можно...",
                            Name = "Backend developer C# (Senior / Middle+), удаленно",
                            Salary = 400000.0,
                            ShortDesc = "Знание C#. Postgresql. Опыт с Camunda (нужно работать с Camunda RestApi и с Camunda External Task). Возможности профессионального развития: можно..."
                        },
                        new
                        {
                            Id = 55527354,
                            Address = "Тула",
                            CompanyId = 966589,
                            FullDesc = "C#/.NET 4.8, .NET Core, ASP.NET MVC, Windows Services, T-SQL (backend) JavaScript, CSS, HTML, Less (client), REST API. ",
                            Name = ".NET developer (middle)",
                            Salary = 165000.0,
                            ShortDesc = "C#/.NET 4.8, .NET Core, ASP.NET MVC, Windows Services, T-SQL (backend) JavaScript, CSS, HTML, Less (client), REST API. "
                        },
                        new
                        {
                            Id = 55264163,
                            Address = "Хабаровск",
                            CompanyId = 776314,
                            FullDesc = "Опыт <highlighttext>разработки</highlighttext> .NetCore приложений. Знание TPL, async/await. TSQL на уровне написания процедур и функций. Знание Mongodb, Redis. ",
                            Name = ".NetCore developer",
                            Salary = 250000.0,
                            ShortDesc = "Опыт <highlighttext>разработки</highlighttext> .NetCore приложений. Знание TPL, async/await. TSQL на уровне написания процедур и функций. Знание Mongodb, Redis. "
                        },
                        new
                        {
                            Id = 55403948,
                            Address = "Москва",
                            CompanyId = 5451960,
                            FullDesc = "Деплой: Gitlab CI/CD. Необходимые навыки: - Опыт серверной <highlighttext>разработки</highlighttext> более 2х лет. - Опыт <highlighttext>разработки</highlighttext> на Golang от 3х...",
                            Name = "Golang developer \\ Разработчик Golang",
                            Salary = 300000.0,
                            ShortDesc = "Деплой: Gitlab CI/CD. Необходимые навыки: - Опыт серверной <highlighttext>разработки</highlighttext> более 2х лет. - Опыт <highlighttext>разработки</highlighttext> на Golang от 3х..."
                        },
                        new
                        {
                            Id = 55857212,
                            Address = "Москва",
                            CompanyId = 3836446,
                            FullDesc = "Будет плюсом:  Профильное высшее образование (математическое или техническое).  Имеете опыт <highlighttext>разработки</highlighttext> подобных решений (Ставки на спорт/Gambling/Poker/Trade/Exchange).  ",
                            Name = "Senior Go разработчик",
                            Salary = 450000.0,
                            ShortDesc = "Будет плюсом:  Профильное высшее образование (математическое или техническое).  Имеете опыт <highlighttext>разработки</highlighttext> подобных решений (Ставки на спорт/Gambling/Poker/Trade/Exchange).  "
                        });
                });

            modelBuilder.Entity("UserVacancy", b =>
                {
                    b.Property<Guid>("LikedUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LikedVacanciesId")
                        .HasColumnType("int");

                    b.HasKey("LikedUsersId", "LikedVacanciesId");

                    b.HasIndex("LikedVacanciesId");

                    b.ToTable("UserVacancy");
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.LastViewedVacancy", b =>
                {
                    b.HasOne("JobsDatingApp.Data.Models.User", "User")
                        .WithOne("LastViewedVacancy")
                        .HasForeignKey("JobsDatingApp.Data.Models.LastViewedVacancy", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobsDatingApp.Data.Models.Vacancy", "Vacancy")
                        .WithMany()
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.Vacancy", b =>
                {
                    b.HasOne("JobsDatingApp.Data.Models.Company", "Company")
                        .WithMany("Vacancies")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("UserVacancy", b =>
                {
                    b.HasOne("JobsDatingApp.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("LikedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobsDatingApp.Data.Models.Vacancy", null)
                        .WithMany()
                        .HasForeignKey("LikedVacanciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.Company", b =>
                {
                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("JobsDatingApp.Data.Models.User", b =>
                {
                    b.Navigation("LastViewedVacancy");
                });
#pragma warning restore 612, 618
        }
    }
}
